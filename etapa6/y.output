Terminals which are not used

   TOKEN_ERROR


State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 type: KW_CHAR
    2     | KW_INT
    3     | KW_FLOAT
    4     | KW_BOOL

    5 literal: LIT_INT
    6        | LIT_CHAR
    7        | LIT_REAL
    8        | LIT_FALSE
    9        | LIT_TRUE

   10 program: decList

   11 decList: decGlobal decTail
   12        | /* empty */

   13 decGlobal: decGlobalVar ';'
   14          | decGlobalVec ';'
   15          | decFunc

   16 decTail: decGlobal decTail
   17        | /* empty */

   18 decGlobalVar: type TK_IDENTIFIER ':' literal

   19 decGlobalVec: type TK_IDENTIFIER '[' LIT_INT ']' initVec

   20 initVec: ':' literal litList
   21        | /* empty */

   22 litList: literal litList
   23        | /* empty */

   24 decFunc: type TK_IDENTIFIER '(' paramList ')' cmdBlock

   25 paramList: param paramTail
   26          | /* empty */

   27 paramTail: ',' param paramTail
   28          | /* empty */

   29 param: type TK_IDENTIFIER

   30 cmdBlock: '{' lCmd '}'

   31 lCmd: cmd lCmd
   32     | /* empty */

   33 cmd: TK_IDENTIFIER '=' expr ';'
   34    | TK_IDENTIFIER '[' expr ']' '=' expr ';'
   35    | KW_IF '(' expr ')' cmd
   36    | KW_IF '(' expr ')' cmd KW_ELSE cmd
   37    | KW_WHILE '(' expr ')' cmd
   38    | KW_READ type TK_IDENTIFIER ';'
   39    | KW_PRINT printElements ';'
   40    | KW_RETURN expr ';'
   41    | cmdBlock
   42    | ';'

   43 printElements: LIT_STRING
   44              | type expr

   45 expr: literal
   46     | TK_IDENTIFIER
   47     | TK_IDENTIFIER '[' expr ']'
   48     | TK_IDENTIFIER '(' argsList ')'
   49     | expr '+' expr
   50     | expr '-' expr
   51     | expr '*' expr
   52     | expr '/' expr
   53     | expr '<' expr
   54     | expr '>' expr
   55     | expr OPERATOR_LE expr
   56     | expr OPERATOR_GE expr
   57     | expr OPERATOR_EQ expr
   58     | expr OPERATOR_DIF expr
   59     | expr '&' expr
   60     | expr '|' expr
   61     | '~' expr
   62     | '(' expr ')'

   63 argsList: expr argsTail
   64         | /* empty */

   65 argsTail: ',' expr argsTail
   66         | /* empty */


Terminals, with rules where they appear

$end (0) 0
'&' (38) 59
'(' (40) 24 35 36 37 48 62
')' (41) 24 35 36 37 48 62
'*' (42) 51
'+' (43) 49
',' (44) 27 65
'-' (45) 50
'/' (47) 52
':' (58) 18 20
';' (59) 13 14 33 34 38 39 40 42
'<' (60) 53
'=' (61) 33 34
'>' (62) 54
'[' (91) 19 34 47
']' (93) 19 34 47
'{' (123) 30
'|' (124) 60
'}' (125) 30
'~' (126) 61
error (256)
KW_CHAR (258) 1
KW_INT (259) 2
KW_FLOAT (260) 3
KW_BOOL (261) 4
KW_IF (262) 35 36
KW_ELSE (263) 36
KW_WHILE (264) 37
KW_READ (265) 38
KW_PRINT (266) 39
KW_RETURN (267) 40
OPERATOR_LE (268) 55
OPERATOR_GE (269) 56
OPERATOR_EQ (270) 57
OPERATOR_DIF (271) 58
TK_IDENTIFIER (272) 18 19 24 29 33 34 38 46 47 48
LIT_INT (273) 5 19
LIT_CHAR (274) 6
LIT_REAL (275) 7
LIT_FALSE (276) 8
LIT_TRUE (277) 9
LIT_STRING (278) 43
TOKEN_ERROR (279)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
type (45)
    on left: 1 2 3 4, on right: 18 19 24 29 38 44
literal (46)
    on left: 5 6 7 8 9, on right: 18 20 22 45
program (47)
    on left: 10, on right: 0
decList (48)
    on left: 11 12, on right: 10
decGlobal (49)
    on left: 13 14 15, on right: 11 16
decTail (50)
    on left: 16 17, on right: 11 16
decGlobalVar (51)
    on left: 18, on right: 13
decGlobalVec (52)
    on left: 19, on right: 14
initVec (53)
    on left: 20 21, on right: 19
litList (54)
    on left: 22 23, on right: 20 22
decFunc (55)
    on left: 24, on right: 15
paramList (56)
    on left: 25 26, on right: 24
paramTail (57)
    on left: 27 28, on right: 25 27
param (58)
    on left: 29, on right: 25 27
cmdBlock (59)
    on left: 30, on right: 24 41
lCmd (60)
    on left: 31 32, on right: 30 31
cmd (61)
    on left: 33 34 35 36 37 38 39 40 41 42, on right: 31 35 36 37
printElements (62)
    on left: 43 44, on right: 39
expr (63)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
   , on right: 33 34 35 36 37 40 44 47 49 50 51 52 53 54 55 56 57 58
    59 60 61 62 63 65
argsList (64)
    on left: 63 64, on right: 48
argsTail (65)
    on left: 65 66, on right: 63 65


state 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    $default  reduce using rule 12 (decList)

    type          go to state 5
    program       go to state 6
    decList       go to state 7
    decGlobal     go to state 8
    decGlobalVar  go to state 9
    decGlobalVec  go to state 10
    decFunc       go to state 11


state 1

    1 type: KW_CHAR .

    $default  reduce using rule 1 (type)


state 2

    2 type: KW_INT .

    $default  reduce using rule 2 (type)


state 3

    3 type: KW_FLOAT .

    $default  reduce using rule 3 (type)


state 4

    4 type: KW_BOOL .

    $default  reduce using rule 4 (type)


state 5

   18 decGlobalVar: type . TK_IDENTIFIER ':' literal
   19 decGlobalVec: type . TK_IDENTIFIER '[' LIT_INT ']' initVec
   24 decFunc: type . TK_IDENTIFIER '(' paramList ')' cmdBlock

    TK_IDENTIFIER  shift, and go to state 12


state 6

    0 $accept: program . $end

    $end  shift, and go to state 13


state 7

   10 program: decList .

    $default  reduce using rule 10 (program)


state 8

   11 decList: decGlobal . decTail

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    $default  reduce using rule 17 (decTail)

    type          go to state 5
    decGlobal     go to state 14
    decTail       go to state 15
    decGlobalVar  go to state 9
    decGlobalVec  go to state 10
    decFunc       go to state 11


state 9

   13 decGlobal: decGlobalVar . ';'

    ';'  shift, and go to state 16


state 10

   14 decGlobal: decGlobalVec . ';'

    ';'  shift, and go to state 17


state 11

   15 decGlobal: decFunc .

    $default  reduce using rule 15 (decGlobal)


state 12

   18 decGlobalVar: type TK_IDENTIFIER . ':' literal
   19 decGlobalVec: type TK_IDENTIFIER . '[' LIT_INT ']' initVec
   24 decFunc: type TK_IDENTIFIER . '(' paramList ')' cmdBlock

    ':'  shift, and go to state 18
    '['  shift, and go to state 19
    '('  shift, and go to state 20


state 13

    0 $accept: program $end .

    $default  accept


state 14

   16 decTail: decGlobal . decTail

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    $default  reduce using rule 17 (decTail)

    type          go to state 5
    decGlobal     go to state 14
    decTail       go to state 21
    decGlobalVar  go to state 9
    decGlobalVec  go to state 10
    decFunc       go to state 11


state 15

   11 decList: decGlobal decTail .

    $default  reduce using rule 11 (decList)


state 16

   13 decGlobal: decGlobalVar ';' .

    $default  reduce using rule 13 (decGlobal)


state 17

   14 decGlobal: decGlobalVec ';' .

    $default  reduce using rule 14 (decGlobal)


state 18

   18 decGlobalVar: type TK_IDENTIFIER ':' . literal

    LIT_INT    shift, and go to state 22
    LIT_CHAR   shift, and go to state 23
    LIT_REAL   shift, and go to state 24
    LIT_FALSE  shift, and go to state 25
    LIT_TRUE   shift, and go to state 26

    literal  go to state 27


state 19

   19 decGlobalVec: type TK_IDENTIFIER '[' . LIT_INT ']' initVec

    LIT_INT  shift, and go to state 28


state 20

   24 decFunc: type TK_IDENTIFIER '(' . paramList ')' cmdBlock

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    $default  reduce using rule 26 (paramList)

    type       go to state 29
    paramList  go to state 30
    param      go to state 31


state 21

   16 decTail: decGlobal decTail .

    $default  reduce using rule 16 (decTail)


state 22

    5 literal: LIT_INT .

    $default  reduce using rule 5 (literal)


state 23

    6 literal: LIT_CHAR .

    $default  reduce using rule 6 (literal)


state 24

    7 literal: LIT_REAL .

    $default  reduce using rule 7 (literal)


state 25

    8 literal: LIT_FALSE .

    $default  reduce using rule 8 (literal)


state 26

    9 literal: LIT_TRUE .

    $default  reduce using rule 9 (literal)


state 27

   18 decGlobalVar: type TK_IDENTIFIER ':' literal .

    $default  reduce using rule 18 (decGlobalVar)


state 28

   19 decGlobalVec: type TK_IDENTIFIER '[' LIT_INT . ']' initVec

    ']'  shift, and go to state 32


state 29

   29 param: type . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 33


state 30

   24 decFunc: type TK_IDENTIFIER '(' paramList . ')' cmdBlock

    ')'  shift, and go to state 34


state 31

   25 paramList: param . paramTail

    ','  shift, and go to state 35

    $default  reduce using rule 28 (paramTail)

    paramTail  go to state 36


state 32

   19 decGlobalVec: type TK_IDENTIFIER '[' LIT_INT ']' . initVec

    ':'  shift, and go to state 37

    $default  reduce using rule 21 (initVec)

    initVec  go to state 38


state 33

   29 param: type TK_IDENTIFIER .

    $default  reduce using rule 29 (param)


state 34

   24 decFunc: type TK_IDENTIFIER '(' paramList ')' . cmdBlock

    '{'  shift, and go to state 39

    cmdBlock  go to state 40


state 35

   27 paramTail: ',' . param paramTail

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    type   go to state 29
    param  go to state 41


state 36

   25 paramList: param paramTail .

    $default  reduce using rule 25 (paramList)


state 37

   20 initVec: ':' . literal litList

    LIT_INT    shift, and go to state 22
    LIT_CHAR   shift, and go to state 23
    LIT_REAL   shift, and go to state 24
    LIT_FALSE  shift, and go to state 25
    LIT_TRUE   shift, and go to state 26

    literal  go to state 42


state 38

   19 decGlobalVec: type TK_IDENTIFIER '[' LIT_INT ']' initVec .

    $default  reduce using rule 19 (decGlobalVec)


state 39

   30 cmdBlock: '{' . lCmd '}'

    KW_IF          shift, and go to state 43
    KW_WHILE       shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    ';'            shift, and go to state 49
    '{'            shift, and go to state 39

    $default  reduce using rule 32 (lCmd)

    cmdBlock  go to state 50
    lCmd      go to state 51
    cmd       go to state 52


state 40

   24 decFunc: type TK_IDENTIFIER '(' paramList ')' cmdBlock .

    $default  reduce using rule 24 (decFunc)


state 41

   27 paramTail: ',' param . paramTail

    ','  shift, and go to state 35

    $default  reduce using rule 28 (paramTail)

    paramTail  go to state 53


state 42

   20 initVec: ':' literal . litList

    LIT_INT    shift, and go to state 22
    LIT_CHAR   shift, and go to state 23
    LIT_REAL   shift, and go to state 24
    LIT_FALSE  shift, and go to state 25
    LIT_TRUE   shift, and go to state 26

    $default  reduce using rule 23 (litList)

    literal  go to state 54
    litList  go to state 55


state 43

   35 cmd: KW_IF . '(' expr ')' cmd
   36    | KW_IF . '(' expr ')' cmd KW_ELSE cmd

    '('  shift, and go to state 56


state 44

   37 cmd: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 57


state 45

   38 cmd: KW_READ . type TK_IDENTIFIER ';'

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3
    KW_BOOL   shift, and go to state 4

    type  go to state 58


state 46

   39 cmd: KW_PRINT . printElements ';'

    KW_CHAR     shift, and go to state 1
    KW_INT      shift, and go to state 2
    KW_FLOAT    shift, and go to state 3
    KW_BOOL     shift, and go to state 4
    LIT_STRING  shift, and go to state 59

    type           go to state 60
    printElements  go to state 61


state 47

   40 cmd: KW_RETURN . expr ';'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 66


state 48

   33 cmd: TK_IDENTIFIER . '=' expr ';'
   34    | TK_IDENTIFIER . '[' expr ']' '=' expr ';'

    '['  shift, and go to state 67
    '='  shift, and go to state 68


state 49

   42 cmd: ';' .

    $default  reduce using rule 42 (cmd)


state 50

   41 cmd: cmdBlock .

    $default  reduce using rule 41 (cmd)


state 51

   30 cmdBlock: '{' lCmd . '}'

    '}'  shift, and go to state 69


state 52

   31 lCmd: cmd . lCmd

    KW_IF          shift, and go to state 43
    KW_WHILE       shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    ';'            shift, and go to state 49
    '{'            shift, and go to state 39

    $default  reduce using rule 32 (lCmd)

    cmdBlock  go to state 50
    lCmd      go to state 70
    cmd       go to state 52


state 53

   27 paramTail: ',' param paramTail .

    $default  reduce using rule 27 (paramTail)


state 54

   22 litList: literal . litList

    LIT_INT    shift, and go to state 22
    LIT_CHAR   shift, and go to state 23
    LIT_REAL   shift, and go to state 24
    LIT_FALSE  shift, and go to state 25
    LIT_TRUE   shift, and go to state 26

    $default  reduce using rule 23 (litList)

    literal  go to state 54
    litList  go to state 71


state 55

   20 initVec: ':' literal litList .

    $default  reduce using rule 20 (initVec)


state 56

   35 cmd: KW_IF '(' . expr ')' cmd
   36    | KW_IF '(' . expr ')' cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 72


state 57

   37 cmd: KW_WHILE '(' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 73


state 58

   38 cmd: KW_READ type . TK_IDENTIFIER ';'

    TK_IDENTIFIER  shift, and go to state 74


state 59

   43 printElements: LIT_STRING .

    $default  reduce using rule 43 (printElements)


state 60

   44 printElements: type . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 75


state 61

   39 cmd: KW_PRINT printElements . ';'

    ';'  shift, and go to state 76


state 62

   46 expr: TK_IDENTIFIER .
   47     | TK_IDENTIFIER . '[' expr ']'
   48     | TK_IDENTIFIER . '(' argsList ')'

    '['  shift, and go to state 77
    '('  shift, and go to state 78

    $default  reduce using rule 46 (expr)


state 63

   61 expr: '~' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 79


state 64

   62 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 80


state 65

   45 expr: literal .

    $default  reduce using rule 45 (expr)


state 66

   40 cmd: KW_RETURN expr . ';'
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ';'           shift, and go to state 93


state 67

   34 cmd: TK_IDENTIFIER '[' . expr ']' '=' expr ';'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 94


state 68

   33 cmd: TK_IDENTIFIER '=' . expr ';'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 95


state 69

   30 cmdBlock: '{' lCmd '}' .

    $default  reduce using rule 30 (cmdBlock)


state 70

   31 lCmd: cmd lCmd .

    $default  reduce using rule 31 (lCmd)


state 71

   22 litList: literal litList .

    $default  reduce using rule 22 (litList)


state 72

   35 cmd: KW_IF '(' expr . ')' cmd
   36    | KW_IF '(' expr . ')' cmd KW_ELSE cmd
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 96


state 73

   37 cmd: KW_WHILE '(' expr . ')' cmd
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 97


state 74

   38 cmd: KW_READ type TK_IDENTIFIER . ';'

    ';'  shift, and go to state 98


state 75

   44 printElements: type expr .
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 44 (printElements)


state 76

   39 cmd: KW_PRINT printElements ';' .

    $default  reduce using rule 39 (cmd)


state 77

   47 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 99


state 78

   48 expr: TK_IDENTIFIER '(' . argsList ')'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    $default  reduce using rule 64 (argsList)

    literal   go to state 65
    expr      go to state 100
    argsList  go to state 101


state 79

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr
   61     | '~' expr .

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 61 (expr)


state 80

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr
   62     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 102


state 81

   55 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 103


state 82

   56 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 104


state 83

   57 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 105


state 84

   58 expr: expr OPERATOR_DIF . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 106


state 85

   60 expr: expr '|' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 107


state 86

   59 expr: expr '&' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 108


state 87

   53 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 109


state 88

   54 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 110


state 89

   49 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 111


state 90

   50 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 112


state 91

   51 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 113


state 92

   52 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 114


state 93

   40 cmd: KW_RETURN expr ';' .

    $default  reduce using rule 40 (cmd)


state 94

   34 cmd: TK_IDENTIFIER '[' expr . ']' '=' expr ';'
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ']'           shift, and go to state 115


state 95

   33 cmd: TK_IDENTIFIER '=' expr . ';'
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ';'           shift, and go to state 116


state 96

   35 cmd: KW_IF '(' expr ')' . cmd
   36    | KW_IF '(' expr ')' . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 43
    KW_WHILE       shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    ';'            shift, and go to state 49
    '{'            shift, and go to state 39

    cmdBlock  go to state 50
    cmd       go to state 117


state 97

   37 cmd: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 43
    KW_WHILE       shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    ';'            shift, and go to state 49
    '{'            shift, and go to state 39

    cmdBlock  go to state 50
    cmd       go to state 118


state 98

   38 cmd: KW_READ type TK_IDENTIFIER ';' .

    $default  reduce using rule 38 (cmd)


state 99

   47 expr: TK_IDENTIFIER '[' expr . ']'
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ']'           shift, and go to state 119


state 100

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr
   63 argsList: expr . argsTail

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 120

    $default  reduce using rule 66 (argsTail)

    argsTail  go to state 121


state 101

   48 expr: TK_IDENTIFIER '(' argsList . ')'

    ')'  shift, and go to state 122


state 102

   62 expr: '(' expr ')' .

    $default  reduce using rule 62 (expr)


state 103

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   55     | expr OPERATOR_LE expr .
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 55 (expr)


state 104

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   56     | expr OPERATOR_GE expr .
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 56 (expr)


state 105

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   57     | expr OPERATOR_EQ expr .
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 57 (expr)


state 106

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   58     | expr OPERATOR_DIF expr .
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 58 (expr)


state 107

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr
   60     | expr '|' expr .

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 60 (expr)


state 108

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   59     | expr '&' expr .
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 59 (expr)


state 109

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   53     | expr '<' expr .
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 53 (expr)


state 110

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   54     | expr '>' expr .
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 54 (expr)


state 111

   49 expr: expr . '+' expr
   49     | expr '+' expr .
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 49 (expr)


state 112

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   50     | expr '-' expr .
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 50 (expr)


state 113

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   51     | expr '*' expr .
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    $default  reduce using rule 51 (expr)


state 114

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   52     | expr '/' expr .
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    $default  reduce using rule 52 (expr)


state 115

   34 cmd: TK_IDENTIFIER '[' expr ']' . '=' expr ';'

    '='  shift, and go to state 123


state 116

   33 cmd: TK_IDENTIFIER '=' expr ';' .

    $default  reduce using rule 33 (cmd)


state 117

   35 cmd: KW_IF '(' expr ')' cmd .
   36    | KW_IF '(' expr ')' cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 124

    KW_ELSE   [reduce using rule 35 (cmd)]
    $default  reduce using rule 35 (cmd)


state 118

   37 cmd: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 37 (cmd)


state 119

   47 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 47 (expr)


state 120

   65 argsTail: ',' . expr argsTail

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 125


state 121

   63 argsList: expr argsTail .

    $default  reduce using rule 63 (argsList)


state 122

   48 expr: TK_IDENTIFIER '(' argsList ')' .

    $default  reduce using rule 48 (expr)


state 123

   34 cmd: TK_IDENTIFIER '[' expr ']' '=' . expr ';'

    TK_IDENTIFIER  shift, and go to state 62
    LIT_INT        shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_REAL       shift, and go to state 24
    LIT_FALSE      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    '~'            shift, and go to state 63
    '('            shift, and go to state 64

    literal  go to state 65
    expr     go to state 126


state 124

   36 cmd: KW_IF '(' expr ')' cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 43
    KW_WHILE       shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    ';'            shift, and go to state 49
    '{'            shift, and go to state 39

    cmdBlock  go to state 50
    cmd       go to state 127


state 125

   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr
   65 argsTail: ',' expr . argsTail

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 120

    $default  reduce using rule 66 (argsTail)

    argsTail  go to state 128


state 126

   34 cmd: TK_IDENTIFIER '[' expr ']' '=' expr . ';'
   49 expr: expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '<' expr
   54     | expr . '>' expr
   55     | expr . OPERATOR_LE expr
   56     | expr . OPERATOR_GE expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_DIF expr
   59     | expr . '&' expr
   60     | expr . '|' expr

    OPERATOR_LE   shift, and go to state 81
    OPERATOR_GE   shift, and go to state 82
    OPERATOR_EQ   shift, and go to state 83
    OPERATOR_DIF  shift, and go to state 84
    '|'           shift, and go to state 85
    '&'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ';'           shift, and go to state 129


state 127

   36 cmd: KW_IF '(' expr ')' cmd KW_ELSE cmd .

    $default  reduce using rule 36 (cmd)


state 128

   65 argsTail: ',' expr argsTail .

    $default  reduce using rule 65 (argsTail)


state 129

   34 cmd: TK_IDENTIFIER '[' expr ']' '=' expr ';' .

    $default  reduce using rule 34 (cmd)
