Terminals which are not used

   KW_CHAR
   KW_FLOAT
   KW_BOOL
   KW_IF
   KW_ELSE
   KW_WHILE
   KW_READ
   KW_PRINT
   KW_RETURN
   LIT_CHAR
   LIT_REAL
   LIT_FALSE
   LIT_TRUE
   LIT_STRING
   TOKEN_ERROR


State 35 conflicts: 8 shift/reduce
State 36 conflicts: 8 shift/reduce
State 37 conflicts: 8 shift/reduce
State 38 conflicts: 8 shift/reduce
State 39 conflicts: 8 shift/reduce
State 40 conflicts: 8 shift/reduce
State 41 conflicts: 8 shift/reduce
State 42 conflicts: 8 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: decl

    2 decl: dec resto
    3     | /* empty */

    4 resto: ',' dec resto
    5      | /* empty */

    6 dec: KW_INT TK_IDENTIFIER
    7    | KW_INT TK_IDENTIFIER '(' ')' body

    8 body: '{' lcmd '}'

    9 lcmd: cmd lcmd
   10     | /* empty */

   11 cmd: TK_IDENTIFIER '=' expr

   12 expr: LIT_INT
   13     | TK_IDENTIFIER
   14     | expr '+' expr
   15     | expr '-' expr
   16     | expr '*' expr
   17     | expr '/' expr
   18     | expr OPERATOR_DIF expr
   19     | expr OPERATOR_EQ expr
   20     | expr OPERATOR_GE expr
   21     | expr OPERATOR_LE expr
   22     | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 22
')' (41) 7 22
'*' (42) 16
'+' (43) 14
',' (44) 4
'-' (45) 15
'/' (47) 17
'=' (61) 11
'{' (123) 8
'}' (125) 8
error (256)
KW_CHAR (258)
KW_INT (259) 6 7
KW_FLOAT (260)
KW_BOOL (261)
KW_IF (262)
KW_ELSE (263)
KW_WHILE (264)
KW_READ (265)
KW_PRINT (266)
KW_RETURN (267)
OPERATOR_LE (268) 21
OPERATOR_GE (269) 20
OPERATOR_EQ (270) 19
OPERATOR_DIF (271) 18
TK_IDENTIFIER (272) 6 7 11 13
LIT_INT (273) 12
LIT_CHAR (274)
LIT_REAL (275)
LIT_FALSE (276)
LIT_TRUE (277)
LIT_STRING (278)
TOKEN_ERROR (279)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
programa (36)
    on left: 1, on right: 0
decl (37)
    on left: 2 3, on right: 1
resto (38)
    on left: 4 5, on right: 2 4
dec (39)
    on left: 6 7, on right: 2 4
body (40)
    on left: 8, on right: 7
lcmd (41)
    on left: 9 10, on right: 8 9
cmd (42)
    on left: 11, on right: 9
expr (43)
    on left: 12 13 14 15 16 17 18 19 20 21 22, on right: 11 14 15 16
    17 18 19 20 21 22


state 0

    0 $accept: . programa $end

    KW_INT  shift, and go to state 1

    $default  reduce using rule 3 (decl)

    programa  go to state 2
    decl      go to state 3
    dec       go to state 4


state 1

    6 dec: KW_INT . TK_IDENTIFIER
    7    | KW_INT . TK_IDENTIFIER '(' ')' body

    TK_IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 6


state 3

    1 programa: decl .

    $default  reduce using rule 1 (programa)


state 4

    2 decl: dec . resto

    ','  shift, and go to state 7

    $default  reduce using rule 5 (resto)

    resto  go to state 8


state 5

    6 dec: KW_INT TK_IDENTIFIER .
    7    | KW_INT TK_IDENTIFIER . '(' ')' body

    '('  shift, and go to state 9

    $default  reduce using rule 6 (dec)


state 6

    0 $accept: programa $end .

    $default  accept


state 7

    4 resto: ',' . dec resto

    KW_INT  shift, and go to state 1

    dec  go to state 10


state 8

    2 decl: dec resto .

    $default  reduce using rule 2 (decl)


state 9

    7 dec: KW_INT TK_IDENTIFIER '(' . ')' body

    ')'  shift, and go to state 11


state 10

    4 resto: ',' dec . resto

    ','  shift, and go to state 7

    $default  reduce using rule 5 (resto)

    resto  go to state 12


state 11

    7 dec: KW_INT TK_IDENTIFIER '(' ')' . body

    '{'  shift, and go to state 13

    body  go to state 14


state 12

    4 resto: ',' dec resto .

    $default  reduce using rule 4 (resto)


state 13

    8 body: '{' . lcmd '}'

    TK_IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 10 (lcmd)

    lcmd  go to state 16
    cmd   go to state 17


state 14

    7 dec: KW_INT TK_IDENTIFIER '(' ')' body .

    $default  reduce using rule 7 (dec)


state 15

   11 cmd: TK_IDENTIFIER . '=' expr

    '='  shift, and go to state 18


state 16

    8 body: '{' lcmd . '}'

    '}'  shift, and go to state 19


state 17

    9 lcmd: cmd . lcmd

    TK_IDENTIFIER  shift, and go to state 15

    $default  reduce using rule 10 (lcmd)

    lcmd  go to state 20
    cmd   go to state 17


state 18

   11 cmd: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 24


state 19

    8 body: '{' lcmd '}' .

    $default  reduce using rule 8 (body)


state 20

    9 lcmd: cmd lcmd .

    $default  reduce using rule 9 (lcmd)


state 21

   13 expr: TK_IDENTIFIER .

    $default  reduce using rule 13 (expr)


state 22

   12 expr: LIT_INT .

    $default  reduce using rule 12 (expr)


state 23

   22 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 25


state 24

   11 cmd: TK_IDENTIFIER '=' expr .
   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    $default  reduce using rule 11 (cmd)


state 25

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr
   22     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    ')'           shift, and go to state 34
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33


state 26

   21 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 35


state 27

   20 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 36


state 28

   19 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 37


state 29

   18 expr: expr OPERATOR_DIF . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 38


state 30

   14 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 39


state 31

   15 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 40


state 32

   16 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 41


state 33

   17 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 21
    LIT_INT        shift, and go to state 22
    '('            shift, and go to state 23

    expr  go to state 42


state 34

   22 expr: '(' expr ')' .

    $default  reduce using rule 22 (expr)


state 35

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr
   21     | expr OPERATOR_LE expr .

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 21 (expr)]
    OPERATOR_GE   [reduce using rule 21 (expr)]
    OPERATOR_EQ   [reduce using rule 21 (expr)]
    OPERATOR_DIF  [reduce using rule 21 (expr)]
    '+'           [reduce using rule 21 (expr)]
    '-'           [reduce using rule 21 (expr)]
    '*'           [reduce using rule 21 (expr)]
    '/'           [reduce using rule 21 (expr)]
    $default      reduce using rule 21 (expr)


state 36

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   20     | expr OPERATOR_GE expr .
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 20 (expr)]
    OPERATOR_GE   [reduce using rule 20 (expr)]
    OPERATOR_EQ   [reduce using rule 20 (expr)]
    OPERATOR_DIF  [reduce using rule 20 (expr)]
    '+'           [reduce using rule 20 (expr)]
    '-'           [reduce using rule 20 (expr)]
    '*'           [reduce using rule 20 (expr)]
    '/'           [reduce using rule 20 (expr)]
    $default      reduce using rule 20 (expr)


state 37

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   19     | expr OPERATOR_EQ expr .
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 19 (expr)]
    OPERATOR_GE   [reduce using rule 19 (expr)]
    OPERATOR_EQ   [reduce using rule 19 (expr)]
    OPERATOR_DIF  [reduce using rule 19 (expr)]
    '+'           [reduce using rule 19 (expr)]
    '-'           [reduce using rule 19 (expr)]
    '*'           [reduce using rule 19 (expr)]
    '/'           [reduce using rule 19 (expr)]
    $default      reduce using rule 19 (expr)


state 38

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   18     | expr OPERATOR_DIF expr .
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 18 (expr)]
    OPERATOR_GE   [reduce using rule 18 (expr)]
    OPERATOR_EQ   [reduce using rule 18 (expr)]
    OPERATOR_DIF  [reduce using rule 18 (expr)]
    '+'           [reduce using rule 18 (expr)]
    '-'           [reduce using rule 18 (expr)]
    '*'           [reduce using rule 18 (expr)]
    '/'           [reduce using rule 18 (expr)]
    $default      reduce using rule 18 (expr)


state 39

   14 expr: expr . '+' expr
   14     | expr '+' expr .
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 14 (expr)]
    OPERATOR_GE   [reduce using rule 14 (expr)]
    OPERATOR_EQ   [reduce using rule 14 (expr)]
    OPERATOR_DIF  [reduce using rule 14 (expr)]
    '+'           [reduce using rule 14 (expr)]
    '-'           [reduce using rule 14 (expr)]
    '*'           [reduce using rule 14 (expr)]
    '/'           [reduce using rule 14 (expr)]
    $default      reduce using rule 14 (expr)


state 40

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   15     | expr '-' expr .
   16     | expr . '*' expr
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 15 (expr)]
    OPERATOR_GE   [reduce using rule 15 (expr)]
    OPERATOR_EQ   [reduce using rule 15 (expr)]
    OPERATOR_DIF  [reduce using rule 15 (expr)]
    '+'           [reduce using rule 15 (expr)]
    '-'           [reduce using rule 15 (expr)]
    '*'           [reduce using rule 15 (expr)]
    '/'           [reduce using rule 15 (expr)]
    $default      reduce using rule 15 (expr)


state 41

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   16     | expr '*' expr .
   17     | expr . '/' expr
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 16 (expr)]
    OPERATOR_GE   [reduce using rule 16 (expr)]
    OPERATOR_EQ   [reduce using rule 16 (expr)]
    OPERATOR_DIF  [reduce using rule 16 (expr)]
    '+'           [reduce using rule 16 (expr)]
    '-'           [reduce using rule 16 (expr)]
    '*'           [reduce using rule 16 (expr)]
    '/'           [reduce using rule 16 (expr)]
    $default      reduce using rule 16 (expr)


state 42

   14 expr: expr . '+' expr
   15     | expr . '-' expr
   16     | expr . '*' expr
   17     | expr . '/' expr
   17     | expr '/' expr .
   18     | expr . OPERATOR_DIF expr
   19     | expr . OPERATOR_EQ expr
   20     | expr . OPERATOR_GE expr
   21     | expr . OPERATOR_LE expr

    OPERATOR_LE   shift, and go to state 26
    OPERATOR_GE   shift, and go to state 27
    OPERATOR_EQ   shift, and go to state 28
    OPERATOR_DIF  shift, and go to state 29
    '+'           shift, and go to state 30
    '-'           shift, and go to state 31
    '*'           shift, and go to state 32
    '/'           shift, and go to state 33

    OPERATOR_LE   [reduce using rule 17 (expr)]
    OPERATOR_GE   [reduce using rule 17 (expr)]
    OPERATOR_EQ   [reduce using rule 17 (expr)]
    OPERATOR_DIF  [reduce using rule 17 (expr)]
    '+'           [reduce using rule 17 (expr)]
    '-'           [reduce using rule 17 (expr)]
    '*'           [reduce using rule 17 (expr)]
    '/'           [reduce using rule 17 (expr)]
    $default      reduce using rule 17 (expr)
